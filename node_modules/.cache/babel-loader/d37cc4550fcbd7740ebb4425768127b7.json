{"ast":null,"code":"var _jsxFileName = \"/Users/sraju/Documents/github/relicstaurants/src/views/payments/payments.js\",\n    _s = $RefreshSig$();\n\nimport { DollarOutlined, HomeOutlined } from '@ant-design/icons';\nimport { Button, Divider, Form, InputNumber, Select, Table } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport { orderList } from 'atoms/order-list.atom';\nimport axios from 'axios';\nimport { Title, ViewWrapper } from 'components/common';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useRecoilState } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Payments = () => {\n  _s();\n\n  const [orderListState, setOrderListState] = useRecoilState(orderList);\n  const [totalCost, setTotalCost] = useState(0);\n  const navigate = useNavigate();\n  const [form] = Form.useForm();\n  const {\n    Option\n  } = Select;\n\n  const handleOrderSending = async payload => {\n    await axios.post('http://lvh.me:3002/api/checkout', payload);\n  };\n\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Count',\n    dataIndex: 'count',\n    key: 'count'\n  }, {\n    title: 'Price',\n    dataIndex: 'price',\n    key: 'price'\n  }];\n\n  const handleFinish = () => {\n    handleOrderSending(orderListState);\n    setOrderListState([]);\n    navigate('/thank-you');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ViewWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(HomeOutlined, {\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \"Delivery Address: \", localStorage.getItem('address')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      type: \"danger\",\n      children: [/*#__PURE__*/_jsxDEV(DollarOutlined, {\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \"Total cost: \", totalCost.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      layout: 'inline',\n      form: form,\n      onFinish: handleFinish,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"card\",\n        rules: [{\n          required: true,\n          message: 'Please choose one!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          label: \"card\",\n          style: {\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"visa\",\n            children: \"Visa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"mastercard\",\n            children: \"MasterCard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"citybank\",\n            children: \"CityBank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"cardNumber\",\n        rules: [{\n          required: true,\n          message: 'Is required'\n        }, {\n          len: 16,\n          message: 'Must be 16 characters long'\n        }],\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          placeholder: \"Card number\",\n          maxLength: 16,\n          controls: false,\n          stringMode: true,\n          style: {\n            width: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"csv\",\n        rules: [{\n          required: true,\n          message: 'Is required'\n        }],\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          maxLength: 3,\n          stringMode: true,\n          placeholder: \"CVV\",\n          controls: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          children: \"Finish payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      style: {\n        width: '100%'\n      },\n      dataSource: orderListState,\n      columns: columns,\n      pagination: false,\n      summary: pageData => {\n        let totalPrice = 0;\n        pageData.forEach(_ref => {\n          let {\n            price,\n            count\n          } = _ref;\n          return totalPrice += price * count;\n        });\n        setTotalCost(totalPrice);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Table.Summary.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Summary.Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table.Summary.Cell, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table.Summary.Cell, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                type: \"danger\",\n                children: totalPrice.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payments, \"AfTfnm5G/mBRANa50HfMS+Y9N/Q=\", false, function () {\n  return [useRecoilState, useNavigate, Form.useForm];\n});\n\n_c = Payments;\nexport default Payments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payments\");","map":{"version":3,"sources":["/Users/sraju/Documents/github/relicstaurants/src/views/payments/payments.js"],"names":["DollarOutlined","HomeOutlined","Button","Divider","Form","InputNumber","Select","Table","Text","orderList","axios","Title","ViewWrapper","React","useState","useNavigate","useRecoilState","Payments","orderListState","setOrderListState","totalCost","setTotalCost","navigate","form","useForm","Option","handleOrderSending","payload","post","columns","title","dataIndex","key","handleFinish","marginRight","localStorage","getItem","toFixed","required","message","width","len","pageData","totalPrice","forEach","price","count"],"mappings":"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","sourcesContent":["import { DollarOutlined, HomeOutlined } from '@ant-design/icons';\nimport { Button, Divider, Form, InputNumber, Select, Table } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport { orderList } from 'atoms/order-list.atom';\nimport axios from 'axios';\nimport { Title, ViewWrapper } from 'components/common';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useRecoilState } from 'recoil';\n\nconst Payments = () => {\n  const [orderListState, setOrderListState] = useRecoilState(orderList);\n  const [totalCost, setTotalCost] = useState(0);\n  const navigate = useNavigate();\n  const [form] = Form.useForm();\n  const { Option } = Select;\n\n  const handleOrderSending = async (payload) => {\n    await axios.post('http://lvh.me:3002/api/checkout', payload);\n  };\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Count',\n      dataIndex: 'count',\n      key: 'count',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n  ];\n\n  const handleFinish = () => {\n    handleOrderSending(orderListState);\n    setOrderListState([]);\n    navigate('/thank-you');\n  };\n\n  return (\n    <ViewWrapper>\n      <Title>Payment</Title>\n      <p>\n        <HomeOutlined style={{ marginRight: '10px' }} />\n        Delivery Address: {localStorage.getItem('address')}\n      </p>\n      <Text type=\"danger\">\n        <DollarOutlined style={{ marginRight: '10px' }} />\n        Total cost: {totalCost.toFixed(2)}\n      </Text>\n      <Divider />\n      <Form layout={'inline'} form={form} onFinish={handleFinish}>\n        <Form.Item\n          name=\"card\"\n          rules={[\n            {\n              required: true,\n              message: 'Please choose one!',\n            },\n          ]}\n        >\n          <Select label=\"card\" style={{ width: '200px' }}>\n            <Option value=\"visa\">Visa</Option>\n            <Option value=\"mastercard\">MasterCard</Option>\n            <Option value=\"citybank\">CityBank</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"cardNumber\"\n          rules={[\n            {\n              required: true,\n              message: 'Is required',\n            },\n            {\n              len: 16,\n              message: 'Must be 16 characters long',\n            },\n          ]}\n        >\n          <InputNumber\n            placeholder=\"Card number\"\n            maxLength={16}\n            controls={false}\n            stringMode\n            style={{ width: '200px' }}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"csv\"\n          rules={[\n            {\n              required: true,\n              message: 'Is required',\n            },\n          ]}\n        >\n          <InputNumber\n            maxLength={3}\n            stringMode\n            placeholder=\"CVV\"\n            controls={false}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button htmlType=\"submit\" type=\"primary\">\n            Finish payment\n          </Button>\n        </Form.Item>\n      </Form>\n\n      <Divider />\n      <Table\n        style={{ width: '100%' }}\n        dataSource={orderListState}\n        columns={columns}\n        pagination={false}\n        summary={(pageData) => {\n          let totalPrice = 0;\n\n          pageData.forEach(({ price, count }) => (totalPrice += price * count));\n          setTotalCost(totalPrice);\n\n          return (\n            <>\n              <Table.Summary.Row>\n                <Table.Summary.Cell />\n                <Table.Summary.Cell>Total</Table.Summary.Cell>\n                <Table.Summary.Cell>\n                  <Text type=\"danger\">{totalPrice.toFixed(2)}</Text>\n                </Table.Summary.Cell>\n              </Table.Summary.Row>\n            </>\n          );\n        }}\n      />\n    </ViewWrapper>\n  );\n};\n\nexport default Payments;\n"]},"metadata":{},"sourceType":"module"}