{"ast":null,"code":"var _jsxFileName = \"/Users/sraju/Documents/github/relicstaurants/src/components/common/cart/cart.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Drawer, Table } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport { orderList } from 'atoms/order-list.atom';\nimport React from 'react';\nimport { useNavigate } from 'react-router';\nimport { useRecoilState } from 'recoil';\nimport { Message } from '../message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const itemQuantity = list => {\n  let totalItemQuantity = 0;\n  list.forEach(item => totalItemQuantity += item.count);\n  return totalItemQuantity;\n};\n\nconst Cart = _ref => {\n  _s();\n\n  let {\n    onClose,\n    isSidebarVisible,\n    setIsSidebarVisible\n  } = _ref;\n  const [orderListState, setOrderList] = useRecoilState(orderList);\n  const navigate = useNavigate();\n\n  const handleDeleteItem = clickedRow => {\n    const reducedData = orderListState.filter(item => item.name === clickedRow.name ? false : true);\n    setOrderList(reducedData);\n  };\n\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Count',\n    dataIndex: 'count',\n    key: 'count'\n  }, {\n    title: 'Price',\n    dataIndex: 'price',\n    key: 'price'\n  }, {\n    title: 'Delete',\n    render: clickedRow => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleDeleteItem(clickedRow),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    size: \"large\",\n    title: \"Cart\",\n    placement: \"right\",\n    onClose: onClose,\n    visible: isSidebarVisible,\n    children: orderListState.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: orderListState,\n      columns: columns,\n      pagination: false,\n      summary: pageData => {\n        let totalPrice = 0;\n        pageData.forEach(_ref2 => {\n          let {\n            price,\n            count\n          } = _ref2;\n          return totalPrice += price * count;\n        });\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Summary.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Summary.Cell, {\n              colSpan: 2,\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Table.Summary.Cell, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                type: \"danger\",\n                children: totalPrice.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table.Summary.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Summary.Cell, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: totalPrice > 0 ? false : true,\n                primary: true,\n                onClick: () => {\n                  setOrderList([]);\n                  setIsSidebarVisible(false);\n                },\n                children: \"Clear Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Table.Summary.Cell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: totalPrice > 0 ? false : true,\n                primary: true,\n                onClick: () => {\n                  navigate(`/payment`, {\n                    state: totalPrice\n                  });\n                  setIsSidebarVisible(false);\n                },\n                children: \"PAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      children: \"Nothing in cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"vR3RfbPBUxUeweJIsqjDnCkw2SY=\", false, function () {\n  return [useRecoilState, useNavigate];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/sraju/Documents/github/relicstaurants/src/components/common/cart/cart.js"],"names":["Button","Drawer","Table","Text","orderList","React","useNavigate","useRecoilState","Message","itemQuantity","list","totalItemQuantity","forEach","item","count","Cart","onClose","isSidebarVisible","setIsSidebarVisible","orderListState","setOrderList","navigate","handleDeleteItem","clickedRow","reducedData","filter","name","columns","title","dataIndex","key","render","length","pageData","totalPrice","price","toFixed","state"],"mappings":"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","sourcesContent":["import { Button, Drawer, Table } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport { orderList } from 'atoms/order-list.atom';\nimport React from 'react';\nimport { useNavigate } from 'react-router';\nimport { useRecoilState } from 'recoil';\nimport { Message } from '../message';\n\nexport const itemQuantity = (list) => {\n  let totalItemQuantity = 0;\n  list.forEach((item) => (totalItemQuantity += item.count));\n\n  return totalItemQuantity;\n};\n\nconst Cart = ({ onClose, isSidebarVisible, setIsSidebarVisible }) => {\n  const [orderListState, setOrderList] = useRecoilState(orderList);\n  const navigate = useNavigate();\n\n  const handleDeleteItem = (clickedRow) => {\n    const reducedData = orderListState.filter((item) =>\n      item.name === clickedRow.name ? false : true\n    );\n    setOrderList(reducedData);\n  };\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Count',\n      dataIndex: 'count',\n      key: 'count',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: 'Delete',\n      render: (clickedRow) => (\n        <Button onClick={() => handleDeleteItem(clickedRow)}>-</Button>\n      ),\n    },\n  ];\n\n  return (\n    <Drawer\n      size=\"large\"\n      title=\"Cart\"\n      placement=\"right\"\n      onClose={onClose}\n      visible={isSidebarVisible}\n    >\n      {orderListState.length > 0 ? (\n        <Table\n          dataSource={orderListState}\n          columns={columns}\n          pagination={false}\n          summary={(pageData) => {\n            let totalPrice = 0;\n\n            pageData.forEach(\n              ({ price, count }) => (totalPrice += price * count)\n            );\n\n            return (\n              <>\n                <Table.Summary.Row>\n                  <Table.Summary.Cell colSpan={2}>Total</Table.Summary.Cell>\n                  <Table.Summary.Cell>\n                    <Text type=\"danger\">{totalPrice.toFixed(2)}</Text>\n                  </Table.Summary.Cell>\n                </Table.Summary.Row>\n                <Table.Summary.Row>\n                  <Table.Summary.Cell colSpan={3}>\n                    <Button\n                      disabled={totalPrice > 0 ? false : true}\n                      primary\n                      onClick={() => {\n                        setOrderList([]);\n                        setIsSidebarVisible(false);\n                      }}\n                    >\n                      Clear Cart\n                    </Button>\n                  </Table.Summary.Cell>\n                  <Table.Summary.Cell>\n                    <Button\n                      disabled={totalPrice > 0 ? false : true}\n                      primary\n                      onClick={() => {\n                        navigate(`/payment`, { state: totalPrice });\n                        setIsSidebarVisible(false);\n                      }}\n                    >\n                      PAY\n                    </Button>\n                  </Table.Summary.Cell>\n                </Table.Summary.Row>\n              </>\n            );\n          }}\n        />\n      ) : (\n        <Message>Nothing in cart</Message>\n      )}\n    </Drawer>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}